library(rjson)
toJSON(list(userid="user1234",runid="run9006"))
lat<-42.369248
long<- -72.417847
rm(list=ls())
toJSON(list(lat=42.540939,long=-72.609808))
testingargs<-list(lat=42.566515,long=-72.630494)
tJSON(list(lat=42.566515,long=-72.630494))
toJSON(list(lat=42.566515,long=-72.630494))
toJSON(list(lat=42.566515,long=-72.630494))
toJSON(list(lat=42.55896,long=-72.622769))
toJSON(list(lat=42.572014,long=-72.630837))
toJSON(list(lat=42.624865,long-72.90915))
toJSON(list(lat=42.624865,long=-72.90915))
setwd("C:/ALR/GitHub/testing/r")
testingargs<-list(basin_dir="C:/ALR/GitHub/somepath/basins",run_dir="C:/ALR/GitHub/testing/somepath2/runs/climate_test",data_dir="C:/ALR/GitHub/somepath/data")
source("weather_generator.R")
warnings()
View(DATA)
View(DATA)
fix(var_prcp_change_percent2)
FINAL_STOCHASTIC_MONTHLY <- cbind(FINAL_STOCHASTIC_MONTHLY1[,1:2],round(FINAL_STOCHASTIC_MONTHLY2,2),round(FINAL_STOCHASTIC_MONTHLY1[,3:5],2),round(STOC_ET,2),round(SDIF,2))
FINAL_STOCHASTIC_DAILY <- cbind(YEAR_SIM,MONTH_SIM,DAY_SIM,round(SIM_PRCP_ADJUSTED,2),round(SIM_TMAX_ADJUSTED,2),round(SIM_TMIN_ADJUSTED,2),round(SIM_TEMP_ADJUSTED,2))
FINAL_STOCHASTIC_MONTHLY1 <- aggregate(FINAL_STOCHASTIC_DAILY[,c(1:2,5:7)],FUN=mean,by=list(FINAL_STOCHASTIC_DAILY[,2],FINAL_STOCHASTIC_DAILY[,1]))[,3:7]
FINAL_STOCHASTIC_MONTHLY2 <- aggregate(FINAL_STOCHASTIC_DAILY[,4],FUN=sum,by=list(FINAL_STOCHASTIC_DAILY[,2],FINAL_STOCHASTIC_DAILY[,1]))[,3]
FINAL_HISTORIC_MONTHLY1 <- aggregate(DATA[,c(1:2,5:6)],FUN=mean,by=list(DATA[,2],DATA[,1]))[,c(1:2,5:6)]
FINAL_HISTORIC_MONTHLY2 <- aggregate(DATA[,c(1:2,4)],FUN=sum,by=list(DATA[,2], DATA[,1]))[,5]
HTAVG <- (FINAL_HISTORIC_MONTHLY1[,3]+FINAL_HISTORIC_MONTHLY1[,4])/2
FINAL_STOCHASTIC_MONTH1 <- aggregate(FINAL_STOCHASTIC_DAILY[,c(1:2,5:7)],FUN=mean,by=list(FINAL_STOCHASTIC_DAILY[,2]))[,c(1,4:6)]
FINAL_STOCHASTIC_MONTH2 <- aggregate(FINAL_STOCHASTIC_DAILY[,4],FUN=sum,by=list(FINAL_STOCHASTIC_DAILY[,2]))[,2]/num_year_sim
HIST_TEMP_MONTH <- aggregate(DATA[,c(1:2,5:6)],FUN=mean,by=list(DATA[,2]))[4:5]
FINAL_HISTORIC_MONTH1 <- (HIST_TEMP_MONTH$TMAX+HIST_TEMP_MONTH$TMIN)/2
FINAL_HISTORIC_MONTH2 <- aggregate(DATA[,c(1:2,4)],FUN=sum,by=list(DATA[,2]))[,4]/62 #62 years in historic timeseries
SDIF <- FINAL_STOCHASTIC_MONTHLY1[,3]-FINAL_STOCHASTIC_MONTHLY1[,4]
HDIF <- FINAL_HISTORIC_MONTHLY1[,3]-FINAL_HISTORIC_MONTHLY1[,4]
STOC_ET <- Hargreaves(FINAL_STOCHASTIC_MONTHLY1[,5],SDIF,BasinLat,GCMDays$Jday[613:1584],GCMDays$Days[613:1584])
rm(list=ls())
setwd("C:/ALR/GitHub/testing/r")
testingargs<-list(basin_dir="C:/ALR/GitHub/somepath/basins",run_dir="C:/ALR/GitHub/testing/somepath2/runs/test_from_kun",data_dir="C:/ALR/GitHub/somepath/data")
source("weather_generator.R")
rm(list=ls())
setwd("C:/ALR/GitHub/testing/r")
testingargs<-list(basin_dir="C:/ALR/GitHub/somepath/basins",run_dir="C:/ALR/GitHub/testing/somepath2/runs/test_from_kun",data_dir="C:/ALR/GitHub/somepath/data")
source("weather_generator.R")
rm(list=ls())
setwd("C:/Documents/GitHub/testing/r")
source("./supporting_scripts/plot_functions.R")
setwd("C:/ALR/GitHub/testing/r")
testingargs<-list(basin_dir="C:/ALR/GitHub/somepath/basins",run_dir="C:/ALR/GitHub/testing/somepath2/runs/14",data_dir="C:/ALR/GitHub/somepath/data")
source("StreamFlowModel.R")
rm(list=ls())
setwd("C:/ALR/GitHub/testing/r")
testingargs<-list(basin_dir="C:/ALR/GitHub/somepath/basins",run_dir="C:/ALR/GitHub/testing/somepath2/runs/14",data_dir="C:/ALR/GitHub/somepath/data")
source("StreamFlowModel.R")
getwd()
setwd(run_dir)
param<-fromJSON(file="settings.json")
setwd(this_dir)
config<-fromJSON(file=paste0(param$scriptName,".json"))
rm(list=ls())
setwd("C:/ALR/GitHub/testing/r")
testingargs<-list(basin_dir="C:/ALR/GitHub/somepath/basins",run_dir="C:/ALR/GitHub/testing/somepath2/runs/14",data_dir="C:/ALR/GitHub/somepath/data")
source("StreamFlowModel.R")
rm(list=ls())
setwd("C:/ALR/GitHub/testing/r")
testingargs<-list(basin_dir="C:/ALR/GitHub/somepath/basins",run_dir="C:/ALR/GitHub/testing/somepath2/runs/16",data_dir="C:/ALR/GitHub/somepath/data")
rm(list=ls())
setwd("C:/ALR/GitHub/testing/r")
testingargs<-list(basin_dir="C:/ALR/GitHub/somepath/basins",run_dir="C:/ALR/GitHub/testing/somepath2/runs/14",data_dir="C:/ALR/GitHub/somepath/data")
source("StreamFlowModel.R")
setwd("C:\ALR\GitHub\testing\temp_files\from Ron")
setwd("C:/ALR/GitHub/testing/temp_files/from Ron")
wb<-read.csv("Westbrook Lambdas - normalized.csv")
wb[1:10,]
spring<-wb[wb$Season=="Spring",c(3:5)]
summer<-wb[wb$Season=="Summer",c(3:5)]
fall<-wb[wb$Season=="Fall",c(3:5)]
winter<-wb[wb$Season=="Winter",c(3:5)]
spring[1:10,]
get.spring(x,y) {
spring[spring$StandardizedFlow==x & spring$StandardizedTemperature==y,"Lambda"]
}
get.spring<-function(x,y) {
spring[spring$StandardizedFlow==x & spring$StandardizedTemperature==y,"Lambda"]
}
get.spring(-1.5,-1.5)
get.srping(0.75,-1.5)
get.spring(0.75,-1.5)
seas.final[1:10,]
temp<-as.array(seas.final[,1],seas.final[,2])
temp[1:10]
temp<-paste0("[",seas.final[,1],"], [",seas.final[,3],"]")
temp[1:10]
